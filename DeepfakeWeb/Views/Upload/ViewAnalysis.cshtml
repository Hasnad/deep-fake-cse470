@using NuGet.Protocol
@using Newtonsoft.Json
@using DeepfakeWeb.Data
@model DeepfakeWeb.Data.ImageData

<div class="container" style="margin-top: 20px;">
    <div class="row">
        <div class="col-md-12">
            <h1 class="text-center">Analysis Report</h1> <!-- Big analysis header -->
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <div class="card" style="padding: 20px; margin-bottom: 20px;">
                <img class="card-img-top" src="data:image/png;base64,@Model.OriginalImageBase64" alt="Original Image">
                <div class="card-body">
                    <h5 class="card-title">Original Image</h5>
                    <p>
                        <strong>Uploaded by:</strong> @Model.AppUserId
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-3"></div>
        <div class="col-md-6 text-center">
            <p class="fw-bold text-success text-center">Graph Type</p>
            <div class="btn btn-primary" onclick="destroyAndShowSmallChart('bar')"><i class="fa fa-bar-chart" aria-hidden="true"></i> Bar Chart</div>
            <div class="btn btn-primary" onclick="destroyAndShowSmallChart('doughnut')"><i class="fa fa-area-chart" aria-hidden="true"></i> Doughnut Chart</div>
            <div class="btn btn-primary" onclick="destroyAndShowSmallChart('pie')"><i class="fa fa-pie-chart" aria-hidden="true"></i> Pie Chart</div>
            <div class="btn btn-primary" onclick="destroyAndShowSmallChart('line')"><i class="fa fa-line-chart" aria-hidden="true"></i> Line Chart</div>
            <p></p>
            <h4 class="fw-bold text-success text-center">Collapsed Chart</h4>
            <canvas id="small-chart"></canvas>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 text-center">
            <i class="fas fa-arrow-down"></i>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <div class="card" style="padding: 20px; margin-bottom: 20px;">
                <img class="card-img-top" src="data:image/png;base64,@Model.MaskImageBase64" alt="Masked Image">
                <div class="card-body">
                    <h5 class="card-title">Artifact Highlight</h5>
                    <p>
                        <strong>Is Real:</strong> @(Model.IsReal ? "Yes" : "No")
                    </p>
                    <strong>Confidence</strong>
                    <div class="progress">
                        <div class="progress-bar @(Model.IsReal ? "bg-success" : "bg-danger")" role="progressbar" style="width: @(Model.Confidence * 100)%;" aria-valuenow="@(Model.Confidence * 100)%" aria-valuemin="0" aria-valuemax="100">@((Model.Confidence * 100).ToString("F"))%</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <h4 class="fw-bold text-success text-center">Breakdown Chart</h4>
            <canvas id="break-down-chart"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
    let smallChart = undefined;
    let break_down_chart = undefined;
    
    function destroyChart(){
      if(smallChart){
        smallChart.destroy();
      }
       if(break_down_chart){
          break_down_chart.destroy();
       }
    }
    
    function destroyAndShowSmallChart(graphType){
      destroyChart();
      showSmallChart(graphType);
      showBreakDownChart(graphType)
    }
    
    showSmallChart('bar');
        function showSmallChart(graphType){  
          const ctx = document.getElementById('small-chart');
            let data = [@Model.GenerationSourcesLikeness[0].Likeness * 100, 100- @Model.GenerationSourcesLikeness[0].Likeness * 100];
          smallChart = new Chart(ctx, {
            type: graphType,
            data: {
              labels: ["Real","Fake"],
              datasets: [{
                label: 'Likeness %',
                data: data,
                borderWidth: 1
              }]
            },
            options: {
              scales: {
                y: {
                  beginAtZero: true,
                }
              }
            }
          });
        }
        </script>

    <script>
    showBreakDownChart('bar')
    function showBreakDownChart(graphType){ 
      const ctx = document.getElementById('break-down-chart');
          let data = @JsonConvert.SerializeObject(Model.GenerationSourcesLikeness.Select(s => s.Likeness * 100).ToList());
      break_down_chart = new Chart(ctx, {
        type: graphType,
        data: {
          labels: ["Real","Synthetic", "DALL-E","Stable Diffusion v1.7","Stable Diffusion v1.8"],
          datasets: [{
            label: 'Likeness %: ',
            data: data,
            borderWidth: 1,
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
            }
          }
        }
      });
    }
    </script>
}